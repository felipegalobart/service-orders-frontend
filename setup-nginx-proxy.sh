#!/bin/bash

# Script para configurar Nginx como proxy reverso para o frontend
# Este script configura o Nginx para servir o frontend e fazer proxy para a API

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß Configurando Nginx como proxy reverso${NC}"
echo "================================================"

# Verificar se o Nginx est√° instalado
if ! command -v nginx &> /dev/null; then
    echo -e "${RED}‚ùå Nginx n√£o est√° instalado. Instalando...${NC}"
    sudo apt update
    sudo apt install -y nginx
    echo -e "${GREEN}‚úÖ Nginx instalado com sucesso${NC}"
else
    echo -e "${GREEN}‚úÖ Nginx j√° est√° instalado${NC}"
fi

# Verificar se o arquivo de configura√ß√£o existe
if [ ! -f "nginx-frontend.conf" ]; then
    echo -e "${RED}‚ùå Arquivo nginx-frontend.conf n√£o encontrado${NC}"
    exit 1
fi

# Fazer backup da configura√ß√£o atual
echo -e "${YELLOW}üìã Fazendo backup da configura√ß√£o atual...${NC}"
sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup.$(date +%Y%m%d_%H%M%S)

# Aplicar nova configura√ß√£o
echo -e "${YELLOW}üìù Aplicando nova configura√ß√£o...${NC}"
sudo cp nginx-frontend.conf /etc/nginx/sites-available/default

# Testar configura√ß√£o
echo -e "${YELLOW}üß™ Testando configura√ß√£o do Nginx...${NC}"
if sudo nginx -t; then
    echo -e "${GREEN}‚úÖ Configura√ß√£o v√°lida${NC}"
else
    echo -e "${RED}‚ùå Configura√ß√£o inv√°lida. Restaurando backup...${NC}"
    sudo cp /etc/nginx/sites-available/default.backup.* /etc/nginx/sites-available/default
    exit 1
fi

# Reiniciar Nginx
echo -e "${YELLOW}üîÑ Reiniciando Nginx...${NC}"
sudo systemctl restart nginx

# Verificar status
if sudo systemctl is-active --quiet nginx; then
    echo -e "${GREEN}‚úÖ Nginx est√° rodando${NC}"
else
    echo -e "${RED}‚ùå Erro ao iniciar Nginx${NC}"
    exit 1
fi

# Verificar se os servi√ßos est√£o rodando
echo -e "${BLUE}üîç Verificando servi√ßos...${NC}"

# Verificar se o frontend est√° rodando na porta 3001
if curl -f http://localhost:3001 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend est√° rodando na porta 3001${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Frontend n√£o est√° rodando na porta 3001${NC}"
    echo -e "${YELLOW}   Execute: ./deploy-frontend.sh${NC}"
fi

# Verificar se a API est√° rodando na porta 3000
if curl -f http://localhost:3000/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API est√° rodando na porta 3000${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  API n√£o est√° rodando na porta 3000${NC}"
    echo -e "${YELLOW}   Verifique se a API est√° rodando${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Configura√ß√£o conclu√≠da com sucesso!${NC}"
echo "================================================"
echo -e "${BLUE}üìä Informa√ß√µes:${NC}"
echo "  ‚Ä¢ Frontend: http://192.168.31.75/"
echo "  ‚Ä¢ API: http://192.168.31.75/api/"
echo "  ‚Ä¢ Health: http://192.168.31.75/health"
echo "  ‚Ä¢ Nginx: Proxy reverso configurado"
echo ""
echo -e "${BLUE}üîß Comandos √∫teis:${NC}"
echo "  ‚Ä¢ Ver logs: sudo tail -f /var/log/nginx/frontend_error.log"
echo "  ‚Ä¢ Testar config: sudo nginx -t"
echo "  ‚Ä¢ Reiniciar: sudo systemctl restart nginx"
echo "  ‚Ä¢ Status: sudo systemctl status nginx"
echo ""
echo -e "${BLUE}üß™ Testes:${NC}"
echo "  ‚Ä¢ Testar frontend: curl http://192.168.31.75/"
echo "  ‚Ä¢ Testar API: curl http://192.168.31.75/api/health"
echo "  ‚Ä¢ Testar login: curl -X POST -H 'Content-Type: application/json' -d '{\"email\":\"test@test.com\",\"password\":\"123456\"}' http://192.168.31.75/api/auth/login"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  Pr√≥ximos passos:${NC}"
echo -e "${YELLOW}   1. Certifique-se de que o frontend est√° rodando na porta 3001${NC}"
echo -e "${YELLOW}   2. Certifique-se de que a API est√° rodando na porta 3000${NC}"
echo -e "${YELLOW}   3. Acesse http://192.168.31.75/ para testar${NC}"
